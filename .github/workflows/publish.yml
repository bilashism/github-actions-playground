name: Publish website

on:
  push:
    branches: [main]
  pull_request:
    branches: '*'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: Linux-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install
      - name: Run pre-commit hooks
        run: pnpm dlx lint-staged --diff=origin/${{ github.event.repository.default_branch }}...origin/${{ github.ref_name }}

  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18.x]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
 

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.7.6
          run_install: false

      - name: Set pnpm store directory
        id: set-store-path
        run: |
          echo "export STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: $STORE_PATH
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run lint-staged on changed files
        run: pnpm lint-staged --diff=origin/main